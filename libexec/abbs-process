#! /bin/bash
. ${ABBS}/env/base.sh

abbs_check_dummy() {
        if bool ${SRCNOSUBDIR}
        then
                mkdir -p 000-build
                cd 000-build
        fi
}

abbscheckspec ${1}

abrequire pm

ABDEP="`abbscalcdep $1`"
pm_exists ${ABDEP} || abdie "Dependencies are not satisfied for $1"

. ${ABBS}/repo/${1}/spec

SPECSEC=`dirname ${1}`
SPECNAM=`basename ${1}`

BUILDENV="`abbsallocenv $SPECSEC-$SPECNAM`"

echo "Preparing" >> ${BUILDENV}/.status

SRCNM="$(basename ${SRCTBL-${GITSRC-${SVNSRC-${HGSRC-${BZRSRC-.}}}}} | cut -d \? -f 1)" # suppress non-exist testing by using self.
if [ "$SRCTBL" ]
then
	wget -c "$SRCTBL" -O ${ABBSTBLPOS}/${SRCNM}
	# tar xvf $ABBSTBLPOS/$SRCNM -C $BUILDENV
	# Adapting abbsuniformextract here.
	pushd ${BUILDENV} > /dev/null
	abbs_check_dummy
	${ABBS}/libexec/abbsuniformextract ${ABBSTBLPOS}/${SRCNM}
	popd > /dev/null
elif [ ! -e ${ABBSTBLPOS}/${SRCNM} ]
then
	pushd ${ABBSTBLPOS} > /dev/null
	if [ "$GITSRC" ]
	then
		git clone $([ "$GITBRCH" ] && echo -b ${GITBRCH}) ${GITSRC} ${SRCNM}
		cd ${SRCNM}
		[ "$GITCO" ] &&
			git checkout ${GITCO}
	elif [ "$SVNSRC" ]
	then
		svn co $([ "$SVNCO" ] && echo -r ${SVNCO}) --quiet ${SVNSRC} ${SRCNM}
	elif [ "$HGSRC" ]
	then
		hg clone ${HGSRC} ${SRCNM}
	elif [ "$BZRSRC" ]
	then
		# SUPPOSED TO WORK, LACKING DOCUMENTATION
		bzr branch ${BZRSRC} ${SRCNM}
	fi
	popd > /dev/null
elif bool ${DUMMYSRC}
then
	mkdir ${BUILDENV}/dummy
fi

if bool ${DUMMYSRC}
then
	abinfo "Dummy source specified."
else
	cp -r ${ABBSTBLPOS}/${SRCNM} ${BUILDENV}
fi

_arg_first(){ echo "$1"; }
[ -d "$BUILDENV/${SUBDIR=$(cd "$BUILDENV"; _arg_first *)}" ] ||
	abdie "Cannot determine the packing subdir."
unset _arg_first

echo "Building" >> ${BUILDENV}/.status

bs_proc_die(){ abdie "$@" 2>&1 | tee -a ${BUILDENV}/.status >&2; }
for i in ${ABBS}/repo/${1}/*
do
	[ -d ${i} ] || continue
	rm -rf ${BUILDENV}/${SUBDIR}/{autobuild,abdist}
	cp -r ${i} ${BUILDENV}/${SUBDIR}/autobuild
	[ "$VER" ] && echo "PKGVER=$VER" >> ${BUILDENV}/${SUBDIR}/autobuild/defines
	[ "$REL" ] && echo "PKGREL=$REL" >> ${BUILDENV}/${SUBDIR}/autobuild/defines
	pushd ${BUILDENV}/${SUBDIR} > /dev/null
	autobuild || bs_proc_die "Autobuild returns non-zero value $?"
	popd > /dev/null
done

echo "Success" > ${BUILDENV}/.status
